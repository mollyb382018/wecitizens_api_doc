# languages : en, fr, nl, de
# what is an institution and an authority
# add path to get all elections + path for active elections

openapi: 3.0.0
servers:
  - url: https://olivier5741.github.io/wecitizens_api_doc/api
    description: mock
  - url: http://wecitizensapi.co-labs.be:8080/api/v1
    description: dev 
  - url: http://localhost:3000/api
    description: local
info:
  title: WeCitizens API
  version: '0.4.0'
  description: |
    WeCitizens API consists of two endpoints to sustain an electoral GPS app. 

    ## Vote (election)

    Vote is the first endpoint, it's concerned about all what gravitates around an **election**. 
    An election can have **candidates** and **parties** (parties can have a list of candidates/substitutes).
    Sometimes elections run across several **districts**. 
    So there will be a main election with districts and the district election will have candidates/parties and references the main election.
    
    ## GPS (survey)

    GPS, the second endpoint, on the other way doesn't care about elections neither politics. Its purpose is to group **questions** into **surveys**. 
    For a given **poll** find the related survey and **segment** (a group of answers) to match your survey answers against. 
    Polls can be grouped into **campaigns**. 
    When the survey is completed, you can go for an answer **submission** and ask for a **match** (who corresponds to my answers).
# Add a logo
x-tagGroups:
  - name: vote
    tags: [election, party, candidate, district]
  - name: gps # maybe find something more appropriate
    tags: [poll, survey, answer, match]
tags:
  - name: election
  - name: party
  - name: candidate
  - name: district
  - name: poll
  - name: survey
  - name: answer
  - name: match
paths:
  /vote/election/{key}:
    get:
      operationId: vote_election_get
      summary: an election
      tags: [election]
      parameters:
        - $ref: '#/components/parameters/key_path'
        - $ref: '#/components/parameters/accept_language'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/election"
              examples:
                municipal:
                  value:
                    key: 2018_be_municipal
                    type: be_municipal
                    date: 2018-10-14T00:00:00.000Z
                    district_type: municipality
                    i18n:
                      en:
                        election_type_be_municipal: Municipal elections
                      fr:
                        election_type_be_municipal: Ã‰lections communales
                      nl:
                        election_type_be_municipal: Gemeentelijke verkiezingen
                regional:
                  value:
                    key: 2014_be_regional
                    type: be_regional
                    date: 2014-05-25T00:00:00.000Z
                    district_type: region
                    districts:
                      - key: be_ed
                        name: district_be_german_electoral_college
                      - key: be_ef
                        name: district_be_french_electoral_college
                      - key: be_en
                        name: district_be_dutch_electoral_college
                    i18n:
                      en:
                        district_be_regional_german_electoral_college: German electoral college
                        district_be_regional_french_electoral_college: French electoral college
                        district_be_regional_dutch_electoral_college: Dutch electoral college
  # /candidates/{id}:
  /vote/election/{main_election_key}/district/{district_key}: # not sure this is the best way to do it
    get:
      operationId: vote_election_by_district_get
      summary: a district election
      tags: [election]
      parameters:
        - $ref: '#/components/parameters/main_election_key_path'
        - $ref: '#/components/parameters/district_key_path'
        - $ref: '#/components/parameters/accept_language'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/election"
              examples:
                compatibility:
                  value:
                    key: 2018_be_federal_chamber_of_representatives_van
                    type: be_federal_chamber_of_representatives                    
                    date: 2017-05-17
                    main_election_key: 2018_be_federal_chamber_of_representatives
                    district_type: province # not sure it's the right term
                    district_key: be_van
                    parties:
                      - key: be_bub
                        name: party_be_bub_name
                        candidates:
                          - order: 1
                            key: joeri_pen
                      - key: be_cdv
                        name: party_be_cdv_name
                        candidates:
                          - order: 1
                            key: servais_verherstraeten
                          - order: 2
                            key: nahima_lanjri
                        substitutes:
                          - order: 1
                            key: walter_schroons
                    candidates:
                      - key: servais_verherstraeten
                        name: Servais Verherstraeten
                        politician_id: politician_be_232
                      - key: nahima_lanjri
                        name: Nahima Lanjri
                        politician_id: politician_be_142
                      - key: walter_schroons
                        name: Walter Schroons
                        politician_id: politician_be_142
                    i18n:
                      en:
                        party_be_bub_name: B.U.B
                        party_be_cdv_name: CD&V
                        election_type_be_federal_chamber_of_representatives: Federal Chamber of Representatives # maybe already loaded
                      nl:
                        district_be_fa: Antwerp # maybe already loaded
                default: # TODO : adapt according to sample above 
                  value:
                    key: 2018_be_municipal_6850
                    main_election_key: 2018_be_municipal
                    district_key: be_municipal_6850
                    parties:
                      - key: cdnv
                        name: CDN-V
                        candidates:
                          - order: 1
                            key: o.wouters
                      - key: ecolo
                        name: Ecolo
                        candidates:
                          - order: 1
                            key: d.sum
                    candidates:
                      - key: o.wouters
                        fullname: Olivier Wouters
                      - key: d.sum
                        fullname: Daniel Sum
                        party_key: cdnv
  /vote/party/search:
    get:
      operationId: vote_party_search_get
      summary: search parties
      tags: [party]
      parameters:
        - $ref: '#/components/parameters/election_key_query'
        - $ref: '#/components/parameters/accept_language'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/party_search_response"
              examples:
                default:
                  value:
                    data:
                      - key: be_bub
                        name: party_be_bub_name
                      - key: be_cdv
                        name: party_be_cdv_name
                    i18n:
                      en:
                        party_be_bub_name: B.U.B
                        party_be_cdv_name: CD&V                      
  /vote/candidate/search:
    get:
      operationId: vote_candidate_search_get
      summary: search candidates
      tags: [candidate]
      parameters:
        - $ref: '#/components/parameters/election_key_query'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/candidate_search_response"
              examples:
                default:
                  value:
                    data:
                      - key: servais_verherstraeten
                        name: Servais Verherstraeten
                        politician_id: politician_be_232
                      - key: nahima_lanjri
                        name: Nahima Lanjri
                        politician_id: politician_be_142
                      - key: walter_schroons
                        name: Walter Schroons
                        politician_id: politician_be_142
  /vote/district/search:
    get:
      operationId: vote_district_search_get
      summary: search districts
      tags: [district]
      parameters: 
        - $ref: '#/components/parameters/key_query'
        - $ref: '#/components/parameters/code_query'
        - $ref: '#/components/parameters/name_contains_query'
        - $ref: '#/components/parameters/main_district_key_query'
        - $ref: '#/components/parameters/election_key_query'
        - $ref: '#/components/parameters/type_in_query'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/district_search_response"
              examples:
                municipality:
                  value:
                    data:
                      - key: be_6850
                        code: 6850
                        type: municipality
                        name: district_be_6850_name
                        district_in_keys: [be_wlx,be_wl] # I don't think it's be_wl
                      - key: be_1435
                        code: 1435
                        type: municipality
                        name: district_be_1435_name     
                        district_in_keys: [be_wbr,be_wl]                   
                    i18n:
                      fr:
                        district_be_6850_name: Paliseul
                        district_be_1435_name: Mont-Saint-Guibert
  /gps/campaign/{key}:
    get:
      operationId: gps_campaign_get
      summary: a poll campaign
      tags: [poll]
      parameters:
        - $ref: '#/components/parameters/key_path'
        - $ref: '#/components/parameters/accept_language'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/poll_campaign"
              examples:
                default:
                  value:
                    key: 2018_be_municipal
  /gps/poll/{key}:
    get:
      operationId: gps_poll_get
      summary: a poll, related survey and segments
      tags: [poll]
      parameters:
        - $ref: '#/components/parameters/key_path'
        - $ref: '#/components/parameters/accept_language'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/poll"
              examples:
                default:
                  value:
                    key: 2018_be_municipal_be_6850
                    survey_key: 2018_be_municipal_wallonia_rural
                    segment_key: 2018_be_municipal_be_6850_politician
  /gps/survey/{key}:
    get:
      operationId: gps_survey_get
      summary: a survey and related questions
      tags: [survey]
      parameters:
        - $ref: '#/components/parameters/key_path'
        - $ref: '#/components/parameters/accept_language'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/survey"
              examples:
                municipal:
                  value:
                    key: 2018_be_municipal_wallonia_rural
                    name: survey_2018_be_municipal_wallonia_rural
                    question_order:
                      - question_2
                      - question_6
                    questions:
                      - key: question_2
                        text: question_2_text
                        answer_format: agr_5_scale_tol_3_scale_abs
                      - key: question_6
                        text: question_6_text
                        notice: question_6_notice
                        answer_format: agr_5_scale_tol_3_scale_abs
                    answer_formats: &answerFormat
                      - key: agr_5_scale_tol_3_scale_abs
                        items:
                          - key: fully_agree
                            name: answer_format_item_fully_agree
                            weight: 100
                          - key: rather_yes
                            name: answer_format_rather_yes
                            weight: 75
                          - key: no_opinion
                            name: answer_format_item_no_opinion
                            weight: 50
                          - key: rather_no
                            name: answer_format_item_rather_no
                            weight: 25
                          - key: strongly_disagree
                            name: answer_format_item_strongly_disagree
                            weight: 0
                        tolerance:
                          absolute: true
                          items:
                            - key: very_important
                              name: answer_format_tolerance_item_very_important
                              weight: 2.5
                            - key: important
                              name: answer_format_tolerance_item_important
                              weight: 1
                            - key: not_important
                              name: answer_format_tolerance_item_not_important
                              weight: 0.4
                    i18n:  
                      en:
                        question_2_text: Regions should manage their social security systems independently
                        answer_format_item_fully_agree: Fully agree # factorise this
                        answer_format_item_rather_yes: Rather yes
                        answer_format_item_no_opinion: No opinion
                        answer_format_item_rather_no: Rather no
                        answer_format_item_strongly_disagree: Strongly disagree
                        answer_format_tolerance_absolute: Absolute
                        answer_format_tolerance_item_very_important: Very important
                        answer_format_tolerance_item_important: Important
                        answer_format_tolerance_item_not_important: Not important
                      fr:
                        question_6_text: Les RÃ©gions devraient gÃ©rer de faÃ§on autonome leur sÃ©curitÃ© sociale
                        question_6_notice: |
                          Dans le cadre de la 6Â° rÃ©forme de lâ€™Etat, la totalitÃ© des recettes dâ€™une branche de la sÃ©curitÃ© sociale -les allocations familiales - sera transfÃ©rÃ© aux trois RÃ©gions et Ã  la CommunautÃ© germanophone. 
                          Dans la RÃ©gion de Bruxelles-Capitale, le transfert aura lieu Ã  la Commission communautaire commune dont relÃ¨ve lâ€™ensemble des francophones et des nÃ©erlandophones y domiciliÃ©s. 
                          Chaque entitÃ© pourra adopter sa propre clef de rÃ©partition et fixera, de maniÃ¨re autonome, ses critÃ¨res de rÃ©partition en fonction des objectifs de sa politique familiale. 
                          Lâ€™ensemble des cotisations sociales (y compris celles relatives aux allocations familiales) Ã  charges des entreprises ou des travailleurs indÃ©pendants restent, pour leur fixation et leur collecte, du ressort de lâ€™Etat fÃ©dÃ©ral. 
                          Ceci pour Ã©viter des diffÃ©rences dans les taux des cotisations sociales pouvant influencer le choix de localisation des entreprises sur base dâ€™une surenchÃ¨re entre les RÃ©gions.
                        
                regional:
                  value:
                    key: 2014_be_regional
                    name: survey_2014_be_regional
                    answer_formats: *answerFormat   
                    question_order:
                      - legal_retirement_age_should_be_increased_65_to_67
                      - turkey_may_join_eu
                    questions:
                      - key: legal_retirement_age_should_be_increased_65_to_67
                        notice: Some notice
                        answer_format: agr_5_scale_tol_3_scale_abs
                      - key: turkey_may_join_eu
                        notice: Some notice
                        answer_format: agr_5_scale_tol_3_scale_abs
                    i18n:
                      fr:
                        survey_2014_be_regional: Elections rÃ©gionales 2014    
                      en:
                        question_legal_retirement_age_should_be_increased_65_to_67: The legal retirement age should be increased from 65 to 67 years.    
                        question_turkey_may_join_eu: Turkey may join the European Union.
                        answer_format_item_fully_agree: Fully agree
                        answer_format_item_rather_yes: Rather yes
                        answer_format_item_no_opinion: No opinion
                        answer_format_item_rather_no: Rather no
                        answer_format_item_strongly_disagree: Strongly disagree
                        answer_format_tolerance_absolute: Absolute
                        answer_format_tolerance_item_very_important: Very important
                        answer_format_tolerance_item_important: Important
                        answer_format_tolerance_item_not_important: Not important
  /gps/submission:
    post:
      operationId: gps_submission_post
      summary: submit answers
      tags: [answer]
      requestBody:
        content:
          application/json:     
            schema:
              $ref: "#/components/schemas/submission"
            examples:
              default:
                value: &submission_example_default                  
                  poll_key: 2018_be_district_6850
                  survey_key: 2018_be_district_wallonia_rural
                  segment_key: 2018_be_district_6850
                  answers: 
                    - value: strongly_no
                      tolerance: important
                      question_key: should_social_care_be_private
                    - value: rather_yes
                      tolerance: not_important
                      question_key: should_watching_the_red_devils_be_mandatory
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/submission"
  /gps/submission/{id}:
    get:
      operationId: gps_submission_get
      summary: inspect an answer submission
      tags: [answer]
      parameters:
        - $ref: '#/components/parameters/id_path'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/submission"
    put:
      operationId: gps_submission_put
      summary: update an answer submission
      tags: [answer]
      parameters:
        - $ref: '#/components/parameters/id_path'
      requestBody:
        content:
          application/json:     
            schema:
              $ref: "#/components/schemas/submission"
            examples:
              default:
                value:   
                  <<: *submission_example_default              
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/submission"
  /gps/match:
    post:
      operationId: gps_match_post
      summary: find a match to your answers
      tags: [match]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/match"
            examples:
              default:
                value:
                  segment_key: 2018_be_district_6850_candidates
                  answers: 
                    - value: strongly_no
                      tolerance: important
                      question_key: should_social_care_be_private
                    - value: rather_yes
                      tolerance: not_important
                      question_key: should_watching_the_red_devils_be_mandatory
      responses:
        '200':
          description: success
components:
  headers:
    Accept-Language:
      description: The languages for i18n
      schema:
        type: string
  parameters:
    accept_language:
      name: Accept-Language
      in: header
      schema:
        type: string
        enum: [en,fr,nl]   
    id_path:
      required: true          
      in: path
      name: id
      description: |
        A UUID identifier
      schema:
        type: string
        format: uuid
    key_path:
      name: key  
      description: |
        A human readable identifier with pattern matching facilities. 
        Samples : `2018_be_municipal` for an election, `be_wlx` for a district
      schema:
        type: string
        pattern: '[a-z0-9_]+'
      required: true          
      in: path
    key_query:
      name: key  
      description: |
        A human readable identifier with pattern matching facilities. 
        Samples : `2018_be_municipal` for an election, `be_wlx` for a district
      schema:
        type: string
        pattern: '[a-z0-9_]+'
      required: true          
      in: query
    code_query:     
      name: code    
      in: query
      example: 6850
      schema:
        type: string 
    main_election_key_path:
      name: main_election_key
      example: 2018_be_municipal
      schema:
        type: string
      required: true          
      in: path
    district_key_path:
      name: district_key
      description: The key of the district
      example: be_6850
      schema:
        type: string
      required: true          
      in: path
    district_type:
      name: district_type
      in: query
      description: The type of district
      example: municipality
      schema:
        type: string
        enum: [region, province, municipality]
    election_key_query:
      name: election_key      
      in: query
      schema:
        type: string
    name_query:
      name: key   
      in: query
      schema:
        type: string
    name_contains_query:
      name: name_contains      
      in: query
      schema:
        type: string
    main_district_key_query:
      name: main_district_key    
      in: query
      schema:
        type: string    
    survey_key:
      name: survey_key 
      in: query
      description: The key of the survey
      example: 2018_be_municipal_brussels
      schema:
        type: string
    segment_key:
      name: segment_key 
      in: query
      description: The key of the segment
      example: 2018_be_municipal_be_6850_politician
      schema:
        type: string
    poll_key:
      name: poll_key 
      in: query
      description: The key of the election poll
      example: 2018_be_municipal_be_6850
      schema:
        type: string
    question_key:
      name: question_key 
      in: query
      description: The key of the question
      example: question_63
      schema:
        type: string
    type_in_query:
      name: type_in     
      in: query
      schema:
        type: array
        items:
          type: string
  schemas:
    id:
      type: string
      format: uuid
      description: |
        A UUID identifier 
    key:      
      type: string 
      description: |
        A human readable identifier with pattern matching facilities. 
        Samples : `2018_be_municipal` for an election, `be_wlx` for a district
      pattern: '[a-z0-9_]+'
    code:
      type: string
      example: 6850
    main_election_key:
      type: string
      example: 2018_be_municipal
    district_key:
      description: The key of the district
      example: be_6850
      type: string
    district_type:
      description: The type of district
      example: municipality
      type: string
      enum: [region, province, municipality]
    election_key:
      type: string
    name:
      type: string
    main_district_key:
      type: string    
    survey_key:
      description: The key of the survey
      example: 2018_be_municipal_brussels
      type: string
    segment_key:
      description: The key of the segment
      example: 2018_be_municipal_be_6850_politician
      type: string
    poll_key:
      description: The key of the election poll
      example: 2018_be_municipal_be_6850
      type: string
    question_key:
      description: The key of the question
      example: question_63
      type: string   
    i18n:
      type: object
      description: Scoped translations
      properties:
        en:
          type: object
        nl:
          type: object
        fr:
          type: object
        de:
          type: object
    election:
      type: object
      description: an election [main or district] with parties and candidates
      required:
        - key
      properties:
        key: 
          $ref: '#/components/schemas/key'
        type:
          type: string
          enum: [be_regional, be_municipal, be_provincial]
        date: # or date ?? 2018-06 -> is ISO valid
          type: string
          format: date
        main_election_key:
          $ref: '#/components/schemas/main_election_key'
        district_type:
          $ref: '#/components/schemas/district_type'
        district_key: 
          $ref: '#/components/schemas/district_key'
        active: 
          type: boolean
        districts:
          type: array
          items:
            $ref: '#/components/schemas/election_district'
        parties:
          type: array
          items:
            $ref: '#/components/schemas/election_party'
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/candidate'
        i18n:
          $ref: '#/components/schemas/i18n'
    election_district:
      type: object
      description: an election party with members
      properties:
        key: 
          $ref: '#/components/schemas/key'       
        code:
          $ref: '#/components/schemas/code'    
        name:
          type: string #TODO could have i18n ref format
        type:
          type: string
          enum: [region,province,municipality]
    election_party:
      type: object
      description: an election party with members
      properties:
        key:
          $ref: '#/components/schemas/key' 
        name:
          type: string
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/election_party_candidate'
        substitutes:
          type: array
          items:
            $ref: '#/components/schemas/election_party_candidate'
    election_party_candidate:
      type: object
      description: An election party member
      properties:
        order:
          type: integer
        key:
          $ref: '#/components/schemas/key' 
    candidate: # they use election_roll
      type: object
      description: An election candidate
      properties:
        key:
          $ref: '#/components/schemas/key' 
        name:
          type: string    
        picture:
          type: string # maybe URI is possible   
        politician_id:
          type: string
        politician_url:
          type: string
    start_limit_search_response_i:
      type: object
      properties:
        start:
          type: integer  
          description: paging first item where to begin the page
        limit:
          type: integer              
          description: paging max amount of items
    i18n_i:
      properties:
        i18n:
          $ref: '#/components/schemas/i18n'
    candidate_search_response:
      allOf:
        - $ref: '#/components/schemas/start_limit_search_response_i'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/candidate'
    party_search_response:
      allOf:
        - $ref: '#/components/schemas/start_limit_search_response_i'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/election_party'
            i18n:
              $ref: '#/components/schemas/i18n'
    district_search_response:
      allOf:
        - $ref: '#/components/schemas/start_limit_search_response_i'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/district_search_response_item'        
        - $ref: '#/components/schemas/i18n_i'
    district_search_response_item: # TODO should find shorter name
      type: object
      properties:
        key:
          type: string        
        code:
          type: string #TODO is integer suitable
        type:
          type: string
          enum: [region,province,municipality]        
        name:
          type: string #TODO could have i18n ref format
        district_in_keys:
          type: array
          items:
            type: string
    poll_campaign:
      type: object
      description: a poll campaign
      properties:
        key: 
          $ref: '#/components/schemas/key'
    poll:
      type: object
      description: a poll
      properties:
        key: 
          $ref: '#/components/schemas/key'
        survey_key: 
          $ref: '#/components/schemas/survey_key'
        segment_key:
          $ref: '#/components/schemas/segment_key'
    survey:
      allOf:
        - type: object
          description: a survey with questions
          properties:
            key: 
              $ref: '#/components/schemas/key'
            name:
              type: string
            questions_order:
              type: array
              items:
                type: string
            questions:
              type: array
              items:
                $ref: '#/components/schemas/question'        
            answer_formats:
              type: array
              items:
                $ref: '#/components/schemas/answer_format'
        - $ref: '#/components/schemas/i18n_i'
    question:
      type: object
      description: a question
      properties:
        key:
          type: string
        text:
          type: string
        notice:
          type: string
        answer_format:
          type: string
          enum: [agr_5_scale_tol_3_scale_abs]
        # there is a name and an explanation/notice [excerpt ??]
    answer_format:
      type: object
      description: an answer format
      properties:
        key: 
          $ref: '#/components/schemas/key'
        items:
          type: array
          items:
            $ref: '#/components/schemas/answer_format_item'
        tolerance:
          $ref: '#/components/schemas/answer_format_tolerance'
    answer_format_tolerance:
      type: object
      properties:
        absolute:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/answer_format_item'
    answer_format_item:
      type: object    
      properties:
        key: 
          $ref: '#/components/schemas/key' # trouble with this in swagger_uis
        name:
          type: string
        weight:
          type: integer # TODO find format for double 
    submission:
      type: object
      description: answers submission
      properties:
        id:
          $ref: '#/components/schemas/id'
        time:
          readOnly: true
          type: string
          format: datetime
        poll_key:
          $ref: '#/components/schemas/poll_key'
        survey_key:
          $ref: '#/components/schemas/survey_key'
        segment_key:
          $ref: '#/components/schemas/segment_key'
        answers:
          type: array
          items:
            $ref: '#/components/schemas/answer'
    answer:
      type: object
      description: an answer
      properties:
        value:
          type: string
        tolerance:
          type: string
        question_key:
          $ref: '#/components/schemas/question_key'
    match:
      type: object
      description: answers match submission
      properties:
        segment_key:
          $ref: '#/components/schemas/segment_key'
        answers:
          type: array
          items:
            $ref: '#/components/schemas/answer'
